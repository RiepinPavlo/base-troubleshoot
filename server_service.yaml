apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2021-06-06T00:24:29Z"
  labels:
    app: canary
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:labels:
          .: {}
          f:app: {}
      f:spec:
        f:externalTrafficPolicy: {}
        f:ports:
          .: {}
          k:{"port":5555,"protocol":"TCP"}:
            .: {}
            f:port: {}
            f:protocol: {}
            f:targetPort: {}
        f:selector: {}
        f:sessionAffinity: {}
        f:type: {}
    manager: kubectl-expose
    operation: Update
    time: "2021-06-06T00:24:29Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:loadBalancer:
          f:ingress: {}
    manager: k3s
    operation: Update
    time: "2021-06-06T00:24:31Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:labels:
          f:app: {}
      f:spec:
        f:selector:
          f:run: {}
    manager: kubectl-edit
    operation: Update
    time: "2021-06-07T21:14:20Z"
  name: server
  namespace: default
  resourceVersion: "5766"
  uid: d4f917bd-dae3-42ea-9dc5-17e045097c4b
spec:
  clusterIP: 10.43.137.131
  clusterIPs:
  - 10.43.137.131
  externalTrafficPolicy: Cluster
  ports:
  - nodePort: 30842
    port: 5555
    protocol: TCP
    targetPort: 5555
  selector:
    run: canary
  sessionAffinity: None
  type: LoadBalancer
status:
  loadBalancer:
    ingress:
    - ip: 192.168.1.149
